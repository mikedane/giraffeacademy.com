<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Giraffe Academy</title>
    <link>https://www.giraffeacademy.com/programming-languages/python/</link>
    <description>Recent content in Python on Giraffe Academy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 22 Oct 2017 11:58:01 -0400</lastBuildDate><atom:link href="https://www.giraffeacademy.com/programming-languages/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Installation</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/installation/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:01 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/installation/</guid>
      <description>Code Copy </description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/hello-world/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:02 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/hello-world/</guid>
      <description>Code Copyprint(&amp;#34;Hello&amp;#34;) print(&amp;#34;World&amp;#34;) print(&amp;#34;!&amp;#34;) </description>
    </item>
    
    <item>
      <title>Drawing A Shape</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/drawing-a-shape/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:02 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/drawing-a-shape/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>Variables</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/variables/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:02 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/variables/</guid>
      <description>print(&amp;quot;There once was a man named &amp;quot; + character_name) print(&amp;quot;He was &amp;quot; + character_age + &amp;quot; years old&amp;quot;) print(&amp;quot;He really liked the name &amp;quot; + character_name) print(&amp;quot;But didn&#39;t like being &amp;quot; + character_age)
You can also print variables using a &#39;,&#39; print(&amp;quot;My variable is&amp;quot;, character_name)
print(&amp;quot;There once was a man named &amp;quot; + character_name) print(&amp;quot;He was &amp;quot; + character_age + &amp;quot; years old&amp;quot;)
character_age = &amp;quot;80&amp;quot;
print(&amp;quot;He really liked the name &amp;quot; + character_name) print(&amp;quot;But didn&#39;t like being &amp;quot; + character_age)</description>
    </item>
    
    <item>
      <title>Strings</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/strings/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:02 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/strings/</guid>
      <description> Video Code Copygreeting = &amp;#34;Hello&amp;#34; #indexes: 01234 print( len(greeting) ) print( greeting[0] ) print( greeting[-1] ) print( greeting.find(&amp;#34;llo&amp;#34;) ) print( greeting.find(&amp;#34;z&amp;#34;) ) print( greeting[2:] ) print( greeting[2:3] ) </description>
    </item>
    
    <item>
      <title>Math</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/math/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:02 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/math/</guid>
      <description>Video Code Copyprint( 2 * 3 ) # Basic Arithmetic: &amp;#43;, -, /, * print( 2**3 ) # Basic Arithmetic: &amp;#43;, -, /, * print( 10 % 3 ) # Modulus Op. : returns remainder of 10/3 print( 1 &amp;#43; 2 * 3 ) # order of operations print(10 / 3.0) # int&amp;#39;s and doubles num = 10 num &amp;#43;= 100 # &amp;#43;=, -=, /=, *= print(num) &amp;#43;&amp;#43;num print(num) # Math module has useful math methods import math print( pow(2, 3) ) print( math.</description>
    </item>
    
    <item>
      <title>Getting User Input</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/getting-user-input/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:02 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/getting-user-input/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>Creating A Calculator</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/creating-a-calculator/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:02 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/creating-a-calculator/</guid>
      <description>Code Copynum1 = int(input(&amp;#34;Enter First Num: &amp;#34;)) num2 = int(input(&amp;#34;Enter Second Num: &amp;#34;)) print(num1 &amp;#43; num2) </description>
    </item>
    
    <item>
      <title>Building A Mad Libs Game</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/building-a-mad-libs-game/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:02 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/building-a-mad-libs-game/</guid>
      <description>Code Copycolor = input(&amp;#34;Enter a color: &amp;#34;) pluralNoun = input(&amp;#34;Enter a plural noun: &amp;#34;) celebrity = input(&amp;#34;Enter a celebrity: &amp;#34;) print(&amp;#34;Roses are&amp;#34;, color) print(pluralNoun &amp;#43; &amp;#34; are blue&amp;#34;) print(&amp;#34;I love&amp;#34;, celebrity) </description>
    </item>
    
    <item>
      <title>Lists</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/lists/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:02 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/lists/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>List Functions</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/list-functions/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:02 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/list-functions/</guid>
      <description>Code Copyfriends = [] friends.append(&amp;#34;Oscar&amp;#34;) friends.append(&amp;#34;Angela&amp;#34;) friends.insert(1, &amp;#34;Kevin&amp;#34;) # friends.remove(&amp;#34;Kevin&amp;#34;) print( friends ) print( friends.index(&amp;#34;Oscar&amp;#34;) ) print( friends.count(&amp;#34;Angela&amp;#34;) ) friends.sort() print( friends ) friends.clear() print( friends ) </description>
    </item>
    
    <item>
      <title>Tuples</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/tuples/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:02 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/tuples/</guid>
      <description>Code Copylucky_numbers = (4, 8, &amp;#34;fifteen&amp;#34;, 16, 23, 42.0) # indexes 0 1 2 3 4 5 # lucky_numbers[0] = 90 # tuples are immutable print(lucky_numbers[0]) print(lucky_numbers[1]) print(lucky_numbers[-1]) print(lucky_numbers[2:]) print(lucky_numbers[2:4]) print(len(lucky_numbers)) </description>
    </item>
    
    <item>
      <title>Functions</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/functions/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:02 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/functions/</guid>
      <description>sayHi()
sayHi(&amp;quot;Mike&amp;quot;)
A parameter is a special variable that a Function will use to perform it&amp;rsquo;s task in a way that is more specific to the needs of the caller. An argument is the value the caller gives to the Function which will get stored inside the parameter variable.
sayHi(&amp;quot;Mike&amp;quot;, 24)</description>
    </item>
    
    <item>
      <title>Return Statements</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/return-statements/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:03 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/return-statements/</guid>
      <description>Code Copydef add_numbers(num1, num2=99): return num1 &amp;#43; num2 sum = add_numbers(4, 3) print(sum) </description>
    </item>
    
    <item>
      <title>If Statements</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/if-statements/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:03 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/if-statements/</guid>
      <description>if is_student and is_smart: print(&amp;quot;You are a student&amp;quot;) elif is_student and not(is_smart): print(&amp;quot;You are not a smart student&amp;quot;) else: print(&amp;quot;You are not a student and not smart&amp;quot;)
&amp;gt;, &amp;lt;, &amp;gt;=, &amp;lt;=, !=, == if 1 &amp;gt; 3: print(&amp;quot;number omparison was true&amp;quot;)
if &amp;quot;dog&amp;quot; == &amp;quot;cat&amp;quot;: print(&amp;quot;string omparison was true&amp;quot;)</description>
    </item>
    
    <item>
      <title>If Statements (Cont)</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/if-statements-cont/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:03 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/if-statements-cont/</guid>
      <description>Code Copyis_student = False is_smart = False if is_student and is_smart: print(&amp;#34;You are a student&amp;#34;) elif is_student and not(is_smart): print(&amp;#34;You are not a smart student&amp;#34;) else: print(&amp;#34;You are not a student and not smart&amp;#34;) # &amp;gt;, &amp;lt;, &amp;gt;=, &amp;lt;=, !=, == if 1 &amp;gt; 3: print(&amp;#34;number omparison was true&amp;#34;) if &amp;#34;dog&amp;#34; == &amp;#34;cat&amp;#34;: print(&amp;#34;string omparison was true&amp;#34;) </description>
    </item>
    
    <item>
      <title>Better Calculator</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/better-calculator/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:03 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/better-calculator/</guid>
      <description>Code Copynum1 = int(input(&amp;#34;num1: &amp;#34;)) op = input(&amp;#34;Operator: &amp;#34;) num1 = int(input(&amp;#34;num1: &amp;#34;)) if op == &amp;#34;&amp;#43;&amp;#34;: print(num1 &amp;#43; num2) elif op == &amp;#34;-&amp;#34;: print(num1 - num2) elif op == &amp;#34;/&amp;#34;: print(num1 / num2) elif op == &amp;#34;*&amp;#34;: print(num1 * num2) else: print(&amp;#34;Invalid Operator&amp;#34;) </description>
    </item>
    
    <item>
      <title>Dictionaries</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/dictionaries/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:03 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/dictionaries/</guid>
      <description>Code Copytest_grades = { &amp;#34;Andy&amp;#34; : &amp;#34;B&amp;#43;&amp;#34;, &amp;#34;Stanley&amp;#34; : &amp;#34;C&amp;#34;, &amp;#34;Ryan&amp;#34; : &amp;#34;A&amp;#34;, 3 : 95.2 } print( test_grades[&amp;#34;Andy&amp;#34;] ) print( test_grades.get(&amp;#34;Ryan&amp;#34;, &amp;#34;No Student Found&amp;#34;) ) print( test_grades[3] ) </description>
    </item>
    
    <item>
      <title>While Loops</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/while-loops/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:03 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/while-loops/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>Guessing Game</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/guessing-game/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:04 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/guessing-game/</guid>
      <description>Code Copysecret_word = &amp;#34;giraffe&amp;#34; guess = &amp;#34;&amp;#34; guess_count = 0 guess_limit = 3 out_of_guesses = False while guess != secret_word and not(out_of_guesses): if guess_count &amp;lt; guess_limit: guess = input(&amp;#34;Enter a guess: &amp;#34;) guess_count &amp;#43;= 1 else: out_of_guesses = True if out_of_guesses: print(&amp;#34;You Lose!&amp;#34;) else: print(&amp;#34;You Win!&amp;#34;) </description>
    </item>
    
    <item>
      <title>For Loops</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/for-loops/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:04 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/for-loops/</guid>
      <description>Code Copyfor index in range(5): print(index) lucky_nums = [4, 8, 15, 16, 23, 42] for lucky_num in lucky_nums: print(lucky_num) for letter in &amp;#34;Giraffe&amp;#34;: print(letter) </description>
    </item>
    
    <item>
      <title>Exponent Function</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/exponent-function/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:04 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/exponent-function/</guid>
      <description>Code Copydef raise_to_power(base_num, pow_num): result = 1 for index in range(pow_num): result *= base_num return result </description>
    </item>
    
    <item>
      <title>2d Arrays &amp; Nested Loops</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/2d-lists-nested-loops/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:04 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/2d-lists-nested-loops/</guid>
      <description>Code Copynumber_grid = [ [1, 2], [3, 4] ] number_grid[0][1] = 99 print(number_grid[0][0]) print(number_grid[0][1]) for row in number_grid: for row in col: print(col) </description>
    </item>
    
    <item>
      <title>Building A Translator</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/building-a-translator/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:04 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/building-a-translator/</guid>
      <description>Code Copydef translate(phrase): translation = &amp;#34;&amp;#34; for letter in phrase: if letter.lower() in &amp;#34;aeiou&amp;#34;: if letter.isupper(): translation = translation &amp;#43; &amp;#34;G&amp;#34; else: translation = translation &amp;#43; &amp;#34;g&amp;#34; else: translation = translation &amp;#43; letter return translation </description>
    </item>
    
    <item>
      <title>Comments</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/comments/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:04 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/comments/</guid>
      <description> single line comment </description>
    </item>
    
    <item>
      <title>Try Except</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/try-except/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:04 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/try-except/</guid>
      <description>Code Copy# code asks user for number and divides 10 by it # enter &amp;#39;0&amp;#39; to trigger exception try: answer = 10 / int(input(&amp;#34;Enter Number: &amp;#34;)) except ZeroDivisionError as e: print(e) except: print(&amp;#34;Caught any exception&amp;#34;) </description>
    </item>
    
    <item>
      <title>Reading Files</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/reading-files/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:05 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/reading-files/</guid>
      <description>Code Copyemployee_file = open(&amp;#34;employees.txt&amp;#34;, &amp;#34;r&amp;#34;) for employee in employee_file.read_lines(): print(employee) employee_file.close() </description>
    </item>
    
    <item>
      <title>Writing Files</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/writing-files/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:05 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/writing-files/</guid>
      <description>Code Copyemployee_file = open(&amp;#34;employees.txt&amp;#34;, &amp;#34;w&amp;#34;) # also try &amp;#34;a&amp;#34; for append employee_file.write(&amp;#34;\nKelly - Customer Service&amp;#34;) employee_file.close() </description>
    </item>
    
    <item>
      <title>Modules</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/modules/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:05 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/modules/</guid>
      <description>Code Copyimport module_name import module2_name as module2 </description>
    </item>
    
    <item>
      <title>Classes &amp; Objects</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/classes-objects/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:05 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/classes-objects/</guid>
      <description>book1 = Book(&amp;quot;Harry Potter&amp;quot;, &amp;quot;JK Rowling&amp;quot;, 500);
book1.title = &amp;quot;Half-Blood Prince&amp;quot; print(book1.title)</description>
    </item>
    
    <item>
      <title>Building A Quiz</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/building-a-quiz/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:05 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/building-a-quiz/</guid>
      <description>Code Copyclass Question: def __init__(self, prompt, answer): self.prompt = prompt self.answer = answer question_prompts = [ &amp;#34;What color are apples?\n(a) Red/Green\n(b)Orange&amp;#34;, &amp;#34;What color are bananas?\n(a) Red/Green\n(b)Yellow&amp;#34;, ] questions = [ Question(question_prompts[0], &amp;#34;a&amp;#34;), Question(question_prompts[1], &amp;#34;b&amp;#34;), ] def run_quiz(questions): score = 0 for question in questions: answer = input(question.prompt) if answer == question.answer: score &amp;#43;= 1 print(&amp;#34;you got&amp;#34;, score, &amp;#34;out of&amp;#34;, len(questions)) run_quiz(questions) </description>
    </item>
    
    <item>
      <title>Class Methods</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/class-methods/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:05 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/class-methods/</guid>
      <description>Code Copyclass Student: def __init__(self, name, major, gpa): self.name = name self.major = major self.gpa = gpa def has_honors(self): if self.gpa &amp;gt;= 3.5: return True return False </description>
    </item>
    
    <item>
      <title>Inheritance</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/inheritance/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:05 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/inheritance/</guid>
      <description>Code Copyclass Chef: def make_chicken(self): print(&amp;#34;The chef makes chicken&amp;#34;) def make_salad(self): print(&amp;#34;The chef makes salad&amp;#34;) def make_special_dish(self): print(&amp;#34;The chef makes bbq ribs&amp;#34;) class ItalianChef(Chef): def make_pasta(self): print(&amp;#34;The chef makes pasta&amp;#34;) def make_special_dish(self): print(&amp;#34;The chef makes chicken parm&amp;#34;) myChef = Chef() myChef.make_chicken() myItalianChef = ItalianChef() myItalianChef.make_chicken() </description>
    </item>
    
    <item>
      <title>Python Interpreter</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/python-interpreter/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:05 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/python-interpreter/</guid>
      <description></description>
    </item>
    
    <item>
      <title>In One Video</title>
      <link>https://www.giraffeacademy.com/programming-languages/python/in-one-video/</link>
      <pubDate>Sun, 22 Oct 2017 11:58:02 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/python/in-one-video/</guid>
      <description>Python Overview Python is a general purpose, dynamically typed and interpreted, object oriented programming language that was created in the late 1980s by Guido van Rossum.
Python&amp;rsquo;s design philosophy revolves around readability. It&amp;rsquo;s meant to be easy to read and easy to write. This is accomplished by using white-space to deliniate code blocks instead of the more traditional curly brackets and semi-colons.
How Python Runs Generally all python code is run using an interpreter.</description>
    </item>
    
  </channel>
</rss>
