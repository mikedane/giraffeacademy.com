<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Giraffe Academy</title>
    <link>https://www.giraffeacademy.com/programming-languages/java/</link>
    <description>Recent content in Java on Giraffe Academy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 22 Oct 2017 11:34:27 -0400</lastBuildDate><atom:link href="https://www.giraffeacademy.com/programming-languages/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Installing Jdk</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/installing-jdk/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:27 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/installing-jdk/</guid>
      <description>Code Copy </description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/hello-world/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:27 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/hello-world/</guid>
      <description>Code CopySystem.out.println(&amp;#34;Hello&amp;#34;); System.out.print(&amp;#34;World&amp;#34;); System.out.println(&amp;#34;!&amp;#34;); </description>
    </item>
    
    <item>
      <title>Drawing A Shape</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/drawing-a-shape/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:28 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/drawing-a-shape/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>Variables</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/variables/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:28 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/variables/</guid>
      <description>System.out.println(&amp;quot;There once was a man named &amp;quot; + characterName); System.out.println(&amp;quot;He was &amp;quot; + characterAge + &amp;quot; years old&amp;quot;); System.out.println(&amp;quot;He really liked the name &amp;quot; + characterName); System.out.println(&amp;quot;But didn&#39;t like being &amp;quot; + characterAge);
System.out.println(&amp;quot;There once was a man named &amp;quot; + characterName); System.out.println(&amp;quot;He was &amp;quot; + characterAge + &amp;quot; years old&amp;quot;);
characterAge = 80;
System.out.println(&amp;quot;He really liked the name &amp;quot; + characterName); System.out.println(&amp;quot;But didn&#39;t like being &amp;quot; + characterAge);</description>
    </item>
    
    <item>
      <title>Data Types</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/data-types/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:28 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/data-types/</guid>
      <description>byte age0 = 0; // 8-bit signed two&#39;s complement integer short age1 = 10; // 16-bit signed two&#39;s complement integer. int age2 = 20; // 32-bit signed two&#39;s complement integer long age3 = 30L; // 64-bit optionally signed two&#39;s complement integer
float gpa0 = 2.5f; // 32-bit floating point double gpa1 = 3.5; // double-precision 64-bit floating point
boolean isTall; // 1 bit -&amp;gt; true/false isTall = true;
name = &amp;quot;John&amp;quot;;</description>
    </item>
    
    <item>
      <title>Strings</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/strings/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:28 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/strings/</guid>
      <description> Video Code CopyString greeting = &amp;#34;Hello&amp;#34;; // indexes: 01234 System.out.println( greeting.length() ); System.out.println( greeting.charAt(0) ); System.out.println( greeting.indexOf(&amp;#34;llo&amp;#34;) ); System.out.println( greeting.indexOf(&amp;#34;z&amp;#34;) ); System.out.println( greeting.substring(2) ); System.out.println( greeting.substring(1, 3) ); </description>
    </item>
    
    <item>
      <title>Math</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/math/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:28 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/math/</guid>
      <description>Video Code CopySystem.out.println( 2 * 3 ); // Basic Arithmetic: &amp;#43;, -, /, * System.out.println( 10 % 3 ); // Modulus Op. : returns remainder of 10/3 System.out.println( 1 &amp;#43; 2 * 3 ); // order of operations System.out.println(10 / 3.0); // int&amp;#39;s and doubles int num = 10; num &amp;#43;= 100; // &amp;#43;=, -=, /=, *= System.out.println(num); num&amp;#43;&amp;#43;; System.out.println(num); // Math class has useful math methods System.out.println( Math.pow(2, 3) ); System.</description>
    </item>
    
    <item>
      <title>Getting User Input</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/getting-user-input/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:28 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/getting-user-input/</guid>
      <description>System.out.print(&amp;quot;Enter username: &amp;quot;); String username = keyboardInput.nextLine(); // .nextDouble(), .nextInt() System.out.println(&amp;quot;Hello, &amp;quot; + username);</description>
    </item>
    
    <item>
      <title>Creating A Calculator</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/creating-a-calculator/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:28 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/creating-a-calculator/</guid>
      <description>Code Copy// import java.util.Scanner; Scanner keyboardInput = new Scanner(System.in); System.out.print(&amp;#34;Enter num1: &amp;#34;); int num1 = keyboardInput.nextDouble(); // .nextDouble(), .nextInt() System.out.print(&amp;#34;Enter num2: &amp;#34;); int num2 = keyboardInput.nextDouble(); System.out.println(num1 &amp;#43; num2); </description>
    </item>
    
    <item>
      <title>Building A Mad Libs Game</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/building-a-mad-libs-game/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:28 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/building-a-mad-libs-game/</guid>
      <description>Code Copy// import java.util.Scanner; Scanner keyboardInput = new Scanner(System.in); System.out.print(&amp;#34;Enter color: &amp;#34;); String color = keyboardInput.nextLine(); System.out.print(&amp;#34;Enter plural noun: &amp;#34;); String pluralNoun = keyboardInput.nextLine(); System.out.print(&amp;#34;Enter celebrity: &amp;#34;); String celebrity = keyboardInput.nextLine(); System.out.println(&amp;#34;Roses are &amp;#34; &amp;#43; color); System.out.println(pluralNoun &amp;#43; &amp;#34; are blue&amp;#34;); System.out.println(&amp;#34;I love &amp;#34; &amp;#43; celebrity); </description>
    </item>
    
    <item>
      <title>Arrays</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/arrays/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:28 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/arrays/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>Methods</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/functions/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:29 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/functions/</guid>
      <description>public static void sayHi(){ System.out.println(&amp;quot;Hello&amp;quot;); }
A parameter is a special variable that a Method will use to perform it&amp;rsquo;s task in a way that is more specific to the needs of the caller. An argument is the value the caller gives to the Method which will get stored inside the parameter variable.
public static void sayHi(String name, int age){ System.out.println(&amp;quot;Hello &amp;quot; + name + &amp;quot; you are &amp;quot; + age); }</description>
    </item>
    
    <item>
      <title>Return</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/return/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:29 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/return/</guid>
      <description>Code Copypublic static void main(String [] args){ int sum = addNumbers(4, 60); System.out.println(sum); } public static int addNumbers(int num1, int num2){ return num1 &amp;#43; num2; } </description>
    </item>
    
    <item>
      <title>If Statements</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/if-statements/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:29 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/if-statements/</guid>
      <description>if(isStudent &amp;amp;&amp;amp; isSmart){ System.out.println(&amp;quot;You are a student&amp;quot;); } else if(isStudent &amp;amp;&amp;amp; !isSmart){ System.out.println(&amp;quot;You are not a smart student&amp;quot;); } else { System.out.println(&amp;quot;You are not a student and not smart&amp;quot;); }
// &amp;gt;, &amp;lt;, &amp;gt;=, &amp;lt;=, !=, ==, String.equals() if(1 &amp;gt; 3){ System.out.println(&amp;quot;number comparison was true&amp;quot;); }
if(&#39;a&#39; &amp;gt; &#39;b&#39;){ System.out.println(&amp;quot;character comparison was true&amp;quot;); }
if(&amp;quot;dog&amp;quot;.equals(&amp;quot;cat&amp;quot;)){ System.out.println(&amp;quot;string comparison was true&amp;quot;); }</description>
    </item>
    
    <item>
      <title>If Statements (Cont)</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/if-statements-cont/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:29 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/if-statements-cont/</guid>
      <description>Code Copyboolean isStudent = false; boolean isSmart = false; if(isStudent &amp;amp;&amp;amp; isSmart){ System.out.println(&amp;#34;You are a student&amp;#34;); } else if(isStudent &amp;amp;&amp;amp; !isSmart){ System.out.println(&amp;#34;You are not a smart student&amp;#34;); } else { System.out.println(&amp;#34;You are not a student and not smart&amp;#34;); } // &amp;gt;, &amp;lt;, &amp;gt;=, &amp;lt;=, !=, ==, String.equals() if(1 &amp;gt; 3){ System.out.println(&amp;#34;number comparison was true&amp;#34;); } if(&amp;#39;a&amp;#39; &amp;gt; &amp;#39;b&amp;#39;){ System.out.println(&amp;#34;character comparison was true&amp;#34;); } if(&amp;#34;dog&amp;#34;.equals(&amp;#34;cat&amp;#34;)){ System.out.println(&amp;#34;string comparison was true&amp;#34;); } </description>
    </item>
    
    <item>
      <title>Better Calculator</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/better-calculator/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:29 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/better-calculator/</guid>
      <description>Code Copy// import java.util.Scanner; Scanner keyboardInput = new Scanner(System.in); System.out.print(&amp;#34;Enter num1: &amp;#34;); int num1 = keyboardInput.nextDouble(); // .nextDouble(), .nextInt() System.out.print(&amp;#34;Enter Operator: &amp;#34;); String op = keyboardInput.nextLine(); System.out.print(&amp;#34;Enter num2: &amp;#34;); int num2 = keyboardInput.nextDouble(); if(op.equals(&amp;#34;&amp;#43;&amp;#34;)){ System.out.println(num1 &amp;#43; num2); } else if(op.equals(&amp;#34;-&amp;#34;)){ System.out.println(num1 - num2); } else if(op.equals(&amp;#34;/&amp;#34;)){ System.out.println(num1 / num2); } else if(op.equals(&amp;#34;*&amp;#34;)){ System.out.println(num1 * num2); } else { System.out.println(&amp;#34;Invalid Operator&amp;#34;); } System.out.println(num1 &amp;#43; num2); </description>
    </item>
    
    <item>
      <title>Switch Statements</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/switch-statements/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:29 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/switch-statements/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>While Loops</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/while-loops/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:29 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/while-loops/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>Building A Guessing Game</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/building-a-guessing-game/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:29 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/building-a-guessing-game/</guid>
      <description>Code Copy// import java.util.Scanner; Scanner keyboardInput = new Scanner(System.in); String secretWord = &amp;#34;giraffe&amp;#34;; String guess = &amp;#34;&amp;#34;; int guessCount = 0; int guessLimit = 3; boolean outOfGuesses = false; while(!guess.equals(secretWord) &amp;amp;&amp;amp; !outOfGuesses){ if(guessCount &amp;lt; guessLimit){ System.out.print(&amp;#34;Enter a guess: &amp;#34;); guess = keyboardInput.nextLine(); guessCount&amp;#43;&amp;#43;; } else { outOfGuesses = true; } } if(outOfGuesses){ System.out.println(&amp;#34;You Lose!&amp;#34;); } else { System.out.println(&amp;#34;You Win!&amp;#34;); } </description>
    </item>
    
    <item>
      <title>For Loops</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/for-loops/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:29 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/for-loops/</guid>
      <description> Video Code Copyfor(int i = 0; i &amp;lt; 5; i&amp;#43;&amp;#43;){ System.out.println(i); } int luckyNums[] = {4, 8, 15, 16, 23, 42}; for(int luckyNum : luckyNums){ System.out.println(luckyNum); } </description>
    </item>
    
    <item>
      <title>Exponent Function</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/exponent-function/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:29 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/exponent-function/</guid>
      <description>Code Copypublic static int pow(int baseNum, int powNum){ int result = 1; for(int i = 0; i &amp;lt; powNum; i&amp;#43;&amp;#43;){ result = result * baseNum; } return result; } </description>
    </item>
    
    <item>
      <title>2d Arrays &amp; Nested Loops</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/2d-arrays-nested-loops/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:30 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/2d-arrays-nested-loops/</guid>
      <description>Code Copy// int [][] numberGrid = new int[2][3]; int [][] numberGrid = { {1, 2}, {3, 4} }; numberGrid[0][1] = 99; System.out.println(numberGrid[0][0]); System.out.println(numberGrid[0][1]); for(int i = 0; i &amp;lt; numberGrid.length; i&amp;#43;&amp;#43;){ for(int j = 0; j &amp;lt; numberGrid[i].length; j&amp;#43;&amp;#43;){ System.out.println(numberGrid[i][j]); } System.out.println(); } </description>
    </item>
    
    <item>
      <title>Comments</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/comments/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:30 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/comments/</guid>
      <description>// single // line // comment</description>
    </item>
    
    <item>
      <title>Try Catch</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/try-catch/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:30 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/try-catch/</guid>
      <description>Code Copytry{ int division = 10/0; }catch(ArithmeticException e){ System.out.println(e); }catch(Exception e){ // Not best practice to use general Exception } // throws exception throw new ArithmeticException(&amp;#34;can&amp;#39;t add numbers&amp;#34;); </description>
    </item>
    
    <item>
      <title>Classes &amp; Objects</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/classes-objects/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:30 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/classes-objects/</guid>
      <description>public class App { public static void main(String [] args) { Book book1 = new Book(); book1.title = &amp;quot;Harry Potter&amp;quot;; book1.author = &amp;quot;JK Rowling&amp;quot;; book1.numPages = 400;
System.out.println(book1.title); Book book2 = new Book(); book2.title = &amp;amp;#34;Lord of the Rings&amp;amp;#34;; book2.author = &amp;amp;#34;JRR Tolkien&amp;amp;#34;; book2.numPages = 300; System.out.println(book2.title); } }</description>
    </item>
    
    <item>
      <title>Classes &amp; Objects (Cont)</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/classes-objects-cont/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:30 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/classes-objects-cont/</guid>
      <description>Code Copyclass Book{ public String title; public String author; } public class App{ public static void main(String [] args){ Book book1 = new Book(); book1.title = &amp;#34;Harry Potter&amp;#34;; book1.author = &amp;#34;JK Rowling&amp;#34;; System.out.println(book1.title); Book book2 = new Book(); book2.title = &amp;#34;Lord of the Rings&amp;#34;; book2.author = &amp;#34;JRR Tolkien&amp;#34;; System.out.println(book2.title); } } </description>
    </item>
    
    <item>
      <title>Constructor Function</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/constructor-function/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:30 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/constructor-function/</guid>
      <description>Code Copyclass Book{ public String title; public String author; public Book(String title, String author){ this.title = title; this.author = author; } } public class App{ public static void main(String [] args){ Book book1 = new Book(&amp;#34;Harry Potter&amp;#34;, &amp;#34;JK Rowling&amp;#34;); System.out.println(book1.title); Book book2 = new Book(&amp;#34;Lord of the Rings&amp;#34;, &amp;#34;JRR Tolkien&amp;#34;); System.out.println(book2.title); } } </description>
    </item>
    
    <item>
      <title>Creating A Quiz</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/creating-a-quiz/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:30 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/creating-a-quiz/</guid>
      <description>Code Copy </description>
    </item>
    
    <item>
      <title>Class Methods</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/class-methods/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:30 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/class-methods/</guid>
      <description>Code Copyclass Book{ public String title; public String author; public void readBook(){ System.out.println(&amp;#34;Reading &amp;#34; &amp;#43; this.title &amp;#43; &amp;#34; by &amp;#34; &amp;#43; this.author); } } </description>
    </item>
    
    <item>
      <title>Getters And Setters</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/getters-and-setters/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:30 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/getters-and-setters/</guid>
      <description>Code Copypublic class Movie{ public String title; private String rating; public int duration; public Movie(String title, String rating, int duration){ this.title = title; this.setRating(rating); this.duration = duration; } public String getRating(){ return this.rating; } public void setRating(String rating){ if(rating.equals(&amp;#34;G&amp;#34;) || rating.equals(&amp;#34;PG&amp;#34;) || rating.equals(&amp;#34;PG-13&amp;#34;) || rating.equals(&amp;#34;R&amp;#34;) || rating.equals(&amp;#34;NR&amp;#34;)){ this.rating = rating; } else { this.rating = &amp;#34;NR&amp;#34;; } } } </description>
    </item>
    
    <item>
      <title>Static Class Attributes</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/static-class-attributes/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:31 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/static-class-attributes/</guid>
      <description>Code Copyclass Song{ public String title; public String artist; public static int songCount = 0; public Song(String title, String artist){ this.title = title; this.artist = artist; songCount&amp;#43;&amp;#43;; } } public class App{ public static void main(String [] args){ Song mySong = new Song(&amp;#34;Holiday&amp;#34;, &amp;#34;Green Day&amp;#34;); System.out.println(Song.songCount); } } </description>
    </item>
    
    <item>
      <title>Static Methods In Classes</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/static-methods-in-classes/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:31 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/static-methods-in-classes/</guid>
      <description>Code Copypublic static class MyStaticClass{ public static int usefulAttribute = 99; public static void usefulFunction(){ // do something useful } } </description>
    </item>
    
    <item>
      <title>Inheritance (Extends)</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/inheritance-extends/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:31 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/inheritance-extends/</guid>
      <description>Code Copyclass Chef{ public void makeChicken(){ System.out.println(&amp;#34;The chef makes chicken&amp;#34;); } public void makeSalad(){ System.out.println(&amp;#34;The chef makes salad&amp;#34;); } public void makeSpecialDish(){ System.out.println(&amp;#34;The chef makes a special dish&amp;#34;); } } class ItalianChef extends Chef{ public void makePasta(){ System.out.println(&amp;#34;The chef makes pasta&amp;#34;); } @Override public void makeSpecialDish(){ System.out.println(&amp;#34;The chef makes chicken parm&amp;#34;); } } public class App{ public static void main(String [] args){ Chef myChef = new Chef(); myChef.makeChicken(); ItalianChef myItalianChef = new ItalianChef(); myItalianChef.</description>
    </item>
    
    <item>
      <title>Inheritance (Implements)</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/inheritance-implements/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:31 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/inheritance-implements/</guid>
      <description>Code Copyinterface Animal{ public void speak(); } class Cat implements Animal{ @Override public void speak(){ System.out.println(&amp;#34;Meow Meow&amp;#34;); } } class Dog implements Animal{ @Override public void speak(){ System.out.println(&amp;#34;Woof Woof&amp;#34;); } } public class App{ public static void main(String [] args){ Animal [] animals = { new Dog(), new Cat() }; for(Animal animal : animals){ animal.speak(); } } } </description>
    </item>
    
    <item>
      <title>Access Modifiers</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/access-modifiers/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:31 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/access-modifiers/</guid>
      <description>Code Copy </description>
    </item>
    
    <item>
      <title>Main Method</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/main-method/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:31 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/main-method/</guid>
      <description>Code Copy </description>
    </item>
    
    <item>
      <title>Packages &amp; Imports</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/packages-imports/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:31 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/packages-imports/</guid>
      <description>Code Copy </description>
    </item>
    
    <item>
      <title>In One Video</title>
      <link>https://www.giraffeacademy.com/programming-languages/java/in-one-video/</link>
      <pubDate>Sun, 22 Oct 2017 11:34:28 -0400</pubDate>
      
      <guid>https://www.giraffeacademy.com/programming-languages/java/in-one-video/</guid>
      <description>Java Overview Java is a general purpose, staticly typed, object oriented programming language that was founded in June 1991. The project was initiated by three developers - James Gosling, Mike Sheridan, and Patrick Naughton, but was officially released by Sun Microsystems in 1995.
Java&amp;rsquo;s tagline is &amp;ldquo;Write once, run anywhere&amp;rdquo;, and the language was founded on 5 principles
It must be &amp;ldquo;simple, object-oriented, and familiar&amp;rdquo;. It must be &amp;ldquo;robust and secure&amp;rdquo;.</description>
    </item>
    
  </channel>
</rss>
